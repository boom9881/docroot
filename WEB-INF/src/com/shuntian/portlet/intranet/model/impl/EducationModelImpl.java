/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.shuntian.portlet.intranet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.shuntian.portlet.intranet.model.Education;
import com.shuntian.portlet.intranet.model.EducationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Education service. Represents a row in the &quot;Intranet_Education&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.shuntian.portlet.intranet.model.EducationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EducationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EducationImpl
 * @see com.shuntian.portlet.intranet.model.Education
 * @see com.shuntian.portlet.intranet.model.EducationModel
 * @generated
 */
public class EducationModelImpl extends BaseModelImpl<Education>
	implements EducationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a education model instance should use the {@link com.shuntian.portlet.intranet.model.Education} interface instead.
	 */
	public static final String TABLE_NAME = "Intranet_Education";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "eWitness", Types.VARCHAR },
			{ "eProfessional", Types.VARCHAR },
			{ "eUniversity", Types.VARCHAR },
			{ "eContactPhone", Types.VARCHAR },
			{ "eStartTimeYear", Types.VARCHAR },
			{ "eStartTimeMonth", Types.VARCHAR },
			{ "eStopTimeYear", Types.VARCHAR },
			{ "eStopTimeMonth", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Intranet_Education (id_ LONG not null primary key,userId LONG,eWitness VARCHAR(75) null,eProfessional VARCHAR(75) null,eUniversity VARCHAR(75) null,eContactPhone VARCHAR(75) null,eStartTimeYear VARCHAR(75) null,eStartTimeMonth VARCHAR(75) null,eStopTimeYear VARCHAR(75) null,eStopTimeMonth VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Intranet_Education";
	public static final String ORDER_BY_JPQL = " ORDER BY education.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Intranet_Education.id_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.shuntian.portlet.intranet.model.Education"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.shuntian.portlet.intranet.model.Education"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.shuntian.portlet.intranet.model.Education"),
			true);
	public static long USERID_COLUMN_BITMASK = 1L;
	public static long ID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.shuntian.portlet.intranet.model.Education"));

	public EducationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Education.class;
	}

	@Override
	public String getModelClassName() {
		return Education.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("userId", getUserId());
		attributes.put("eWitness", getEWitness());
		attributes.put("eProfessional", getEProfessional());
		attributes.put("eUniversity", getEUniversity());
		attributes.put("eContactPhone", getEContactPhone());
		attributes.put("eStartTimeYear", getEStartTimeYear());
		attributes.put("eStartTimeMonth", getEStartTimeMonth());
		attributes.put("eStopTimeYear", getEStopTimeYear());
		attributes.put("eStopTimeMonth", getEStopTimeMonth());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String eWitness = (String)attributes.get("eWitness");

		if (eWitness != null) {
			setEWitness(eWitness);
		}

		String eProfessional = (String)attributes.get("eProfessional");

		if (eProfessional != null) {
			setEProfessional(eProfessional);
		}

		String eUniversity = (String)attributes.get("eUniversity");

		if (eUniversity != null) {
			setEUniversity(eUniversity);
		}

		String eContactPhone = (String)attributes.get("eContactPhone");

		if (eContactPhone != null) {
			setEContactPhone(eContactPhone);
		}

		String eStartTimeYear = (String)attributes.get("eStartTimeYear");

		if (eStartTimeYear != null) {
			setEStartTimeYear(eStartTimeYear);
		}

		String eStartTimeMonth = (String)attributes.get("eStartTimeMonth");

		if (eStartTimeMonth != null) {
			setEStartTimeMonth(eStartTimeMonth);
		}

		String eStopTimeYear = (String)attributes.get("eStopTimeYear");

		if (eStopTimeYear != null) {
			setEStopTimeYear(eStopTimeYear);
		}

		String eStopTimeMonth = (String)attributes.get("eStopTimeMonth");

		if (eStopTimeMonth != null) {
			setEStopTimeMonth(eStopTimeMonth);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_columnBitmask = -1L;

		_id = id;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getEWitness() {
		if (_eWitness == null) {
			return StringPool.BLANK;
		}
		else {
			return _eWitness;
		}
	}

	@Override
	public void setEWitness(String eWitness) {
		_eWitness = eWitness;
	}

	@Override
	public String getEProfessional() {
		if (_eProfessional == null) {
			return StringPool.BLANK;
		}
		else {
			return _eProfessional;
		}
	}

	@Override
	public void setEProfessional(String eProfessional) {
		_eProfessional = eProfessional;
	}

	@Override
	public String getEUniversity() {
		if (_eUniversity == null) {
			return StringPool.BLANK;
		}
		else {
			return _eUniversity;
		}
	}

	@Override
	public void setEUniversity(String eUniversity) {
		_eUniversity = eUniversity;
	}

	@Override
	public String getEContactPhone() {
		if (_eContactPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _eContactPhone;
		}
	}

	@Override
	public void setEContactPhone(String eContactPhone) {
		_eContactPhone = eContactPhone;
	}

	@Override
	public String getEStartTimeYear() {
		if (_eStartTimeYear == null) {
			return StringPool.BLANK;
		}
		else {
			return _eStartTimeYear;
		}
	}

	@Override
	public void setEStartTimeYear(String eStartTimeYear) {
		_eStartTimeYear = eStartTimeYear;
	}

	@Override
	public String getEStartTimeMonth() {
		if (_eStartTimeMonth == null) {
			return StringPool.BLANK;
		}
		else {
			return _eStartTimeMonth;
		}
	}

	@Override
	public void setEStartTimeMonth(String eStartTimeMonth) {
		_eStartTimeMonth = eStartTimeMonth;
	}

	@Override
	public String getEStopTimeYear() {
		if (_eStopTimeYear == null) {
			return StringPool.BLANK;
		}
		else {
			return _eStopTimeYear;
		}
	}

	@Override
	public void setEStopTimeYear(String eStopTimeYear) {
		_eStopTimeYear = eStopTimeYear;
	}

	@Override
	public String getEStopTimeMonth() {
		if (_eStopTimeMonth == null) {
			return StringPool.BLANK;
		}
		else {
			return _eStopTimeMonth;
		}
	}

	@Override
	public void setEStopTimeMonth(String eStopTimeMonth) {
		_eStopTimeMonth = eStopTimeMonth;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Education.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Education toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Education)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EducationImpl educationImpl = new EducationImpl();

		educationImpl.setId(getId());
		educationImpl.setUserId(getUserId());
		educationImpl.setEWitness(getEWitness());
		educationImpl.setEProfessional(getEProfessional());
		educationImpl.setEUniversity(getEUniversity());
		educationImpl.setEContactPhone(getEContactPhone());
		educationImpl.setEStartTimeYear(getEStartTimeYear());
		educationImpl.setEStartTimeMonth(getEStartTimeMonth());
		educationImpl.setEStopTimeYear(getEStopTimeYear());
		educationImpl.setEStopTimeMonth(getEStopTimeMonth());

		educationImpl.resetOriginalValues();

		return educationImpl;
	}

	@Override
	public int compareTo(Education education) {
		int value = 0;

		if (getId() < education.getId()) {
			value = -1;
		}
		else if (getId() > education.getId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Education)) {
			return false;
		}

		Education education = (Education)obj;

		long primaryKey = education.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EducationModelImpl educationModelImpl = this;

		educationModelImpl._originalUserId = educationModelImpl._userId;

		educationModelImpl._setOriginalUserId = false;

		educationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Education> toCacheModel() {
		EducationCacheModel educationCacheModel = new EducationCacheModel();

		educationCacheModel.id = getId();

		educationCacheModel.userId = getUserId();

		educationCacheModel.eWitness = getEWitness();

		String eWitness = educationCacheModel.eWitness;

		if ((eWitness != null) && (eWitness.length() == 0)) {
			educationCacheModel.eWitness = null;
		}

		educationCacheModel.eProfessional = getEProfessional();

		String eProfessional = educationCacheModel.eProfessional;

		if ((eProfessional != null) && (eProfessional.length() == 0)) {
			educationCacheModel.eProfessional = null;
		}

		educationCacheModel.eUniversity = getEUniversity();

		String eUniversity = educationCacheModel.eUniversity;

		if ((eUniversity != null) && (eUniversity.length() == 0)) {
			educationCacheModel.eUniversity = null;
		}

		educationCacheModel.eContactPhone = getEContactPhone();

		String eContactPhone = educationCacheModel.eContactPhone;

		if ((eContactPhone != null) && (eContactPhone.length() == 0)) {
			educationCacheModel.eContactPhone = null;
		}

		educationCacheModel.eStartTimeYear = getEStartTimeYear();

		String eStartTimeYear = educationCacheModel.eStartTimeYear;

		if ((eStartTimeYear != null) && (eStartTimeYear.length() == 0)) {
			educationCacheModel.eStartTimeYear = null;
		}

		educationCacheModel.eStartTimeMonth = getEStartTimeMonth();

		String eStartTimeMonth = educationCacheModel.eStartTimeMonth;

		if ((eStartTimeMonth != null) && (eStartTimeMonth.length() == 0)) {
			educationCacheModel.eStartTimeMonth = null;
		}

		educationCacheModel.eStopTimeYear = getEStopTimeYear();

		String eStopTimeYear = educationCacheModel.eStopTimeYear;

		if ((eStopTimeYear != null) && (eStopTimeYear.length() == 0)) {
			educationCacheModel.eStopTimeYear = null;
		}

		educationCacheModel.eStopTimeMonth = getEStopTimeMonth();

		String eStopTimeMonth = educationCacheModel.eStopTimeMonth;

		if ((eStopTimeMonth != null) && (eStopTimeMonth.length() == 0)) {
			educationCacheModel.eStopTimeMonth = null;
		}

		return educationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", eWitness=");
		sb.append(getEWitness());
		sb.append(", eProfessional=");
		sb.append(getEProfessional());
		sb.append(", eUniversity=");
		sb.append(getEUniversity());
		sb.append(", eContactPhone=");
		sb.append(getEContactPhone());
		sb.append(", eStartTimeYear=");
		sb.append(getEStartTimeYear());
		sb.append(", eStartTimeMonth=");
		sb.append(getEStartTimeMonth());
		sb.append(", eStopTimeYear=");
		sb.append(getEStopTimeYear());
		sb.append(", eStopTimeMonth=");
		sb.append(getEStopTimeMonth());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("com.shuntian.portlet.intranet.model.Education");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eWitness</column-name><column-value><![CDATA[");
		sb.append(getEWitness());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eProfessional</column-name><column-value><![CDATA[");
		sb.append(getEProfessional());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eUniversity</column-name><column-value><![CDATA[");
		sb.append(getEUniversity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eContactPhone</column-name><column-value><![CDATA[");
		sb.append(getEContactPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eStartTimeYear</column-name><column-value><![CDATA[");
		sb.append(getEStartTimeYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eStartTimeMonth</column-name><column-value><![CDATA[");
		sb.append(getEStartTimeMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eStopTimeYear</column-name><column-value><![CDATA[");
		sb.append(getEStopTimeYear());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eStopTimeMonth</column-name><column-value><![CDATA[");
		sb.append(getEStopTimeMonth());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Education.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Education.class
		};
	private long _id;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _eWitness;
	private String _eProfessional;
	private String _eUniversity;
	private String _eContactPhone;
	private String _eStartTimeYear;
	private String _eStartTimeMonth;
	private String _eStopTimeYear;
	private String _eStopTimeMonth;
	private long _columnBitmask;
	private Education _escapedModel;
}