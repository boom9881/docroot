/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.shuntian.portlet.intranet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.shuntian.portlet.intranet.model.Education;
import com.shuntian.portlet.intranet.model.EducationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Education service. Represents a row in the &quot;Intranet_Education&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.shuntian.portlet.intranet.model.EducationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EducationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see EducationImpl
 * @see com.shuntian.portlet.intranet.model.Education
 * @see com.shuntian.portlet.intranet.model.EducationModel
 * @generated
 */
public class EducationModelImpl extends BaseModelImpl<Education>
	implements EducationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a education model instance should use the {@link com.shuntian.portlet.intranet.model.Education} interface instead.
	 */
	public static final String TABLE_NAME = "Intranet_Education";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "witness", Types.VARCHAR },
			{ "professional", Types.VARCHAR },
			{ "university", Types.VARCHAR },
			{ "contactPhone", Types.VARCHAR },
			{ "startTime", Types.TIMESTAMP },
			{ "stopTime", Types.TIMESTAMP },
			{ "createUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedUserId", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Intranet_Education (id_ LONG not null primary key,userId LONG,witness VARCHAR(75) null,professional VARCHAR(75) null,university VARCHAR(75) null,contactPhone VARCHAR(75) null,startTime DATE null,stopTime DATE null,createUserId LONG,createDate DATE null,modifiedUserId LONG,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Intranet_Education";
	public static final String ORDER_BY_JPQL = " ORDER BY education.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY Intranet_Education.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.shuntian.portlet.intranet.model.Education"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.shuntian.portlet.intranet.model.Education"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.shuntian.portlet.intranet.model.Education"),
			true);
	public static long USERID_COLUMN_BITMASK = 1L;
	public static long CREATEDATE_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.shuntian.portlet.intranet.model.Education"));

	public EducationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Education.class;
	}

	@Override
	public String getModelClassName() {
		return Education.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("userId", getUserId());
		attributes.put("witness", getWitness());
		attributes.put("professional", getProfessional());
		attributes.put("university", getUniversity());
		attributes.put("contactPhone", getContactPhone());
		attributes.put("startTime", getStartTime());
		attributes.put("stopTime", getStopTime());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String witness = (String)attributes.get("witness");

		if (witness != null) {
			setWitness(witness);
		}

		String professional = (String)attributes.get("professional");

		if (professional != null) {
			setProfessional(professional);
		}

		String university = (String)attributes.get("university");

		if (university != null) {
			setUniversity(university);
		}

		String contactPhone = (String)attributes.get("contactPhone");

		if (contactPhone != null) {
			setContactPhone(contactPhone);
		}

		Date startTime = (Date)attributes.get("startTime");

		if (startTime != null) {
			setStartTime(startTime);
		}

		Date stopTime = (Date)attributes.get("stopTime");

		if (stopTime != null) {
			setStopTime(stopTime);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getWitness() {
		if (_witness == null) {
			return StringPool.BLANK;
		}
		else {
			return _witness;
		}
	}

	@Override
	public void setWitness(String witness) {
		_witness = witness;
	}

	@Override
	public String getProfessional() {
		if (_professional == null) {
			return StringPool.BLANK;
		}
		else {
			return _professional;
		}
	}

	@Override
	public void setProfessional(String professional) {
		_professional = professional;
	}

	@Override
	public String getUniversity() {
		if (_university == null) {
			return StringPool.BLANK;
		}
		else {
			return _university;
		}
	}

	@Override
	public void setUniversity(String university) {
		_university = university;
	}

	@Override
	public String getContactPhone() {
		if (_contactPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactPhone;
		}
	}

	@Override
	public void setContactPhone(String contactPhone) {
		_contactPhone = contactPhone;
	}

	@Override
	public Date getStartTime() {
		return _startTime;
	}

	@Override
	public void setStartTime(Date startTime) {
		_startTime = startTime;
	}

	@Override
	public Date getStopTime() {
		return _stopTime;
	}

	@Override
	public void setStopTime(Date stopTime) {
		_stopTime = stopTime;
	}

	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	@Override
	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	@Override
	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	@Override
	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Education.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Education toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Education)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EducationImpl educationImpl = new EducationImpl();

		educationImpl.setId(getId());
		educationImpl.setUserId(getUserId());
		educationImpl.setWitness(getWitness());
		educationImpl.setProfessional(getProfessional());
		educationImpl.setUniversity(getUniversity());
		educationImpl.setContactPhone(getContactPhone());
		educationImpl.setStartTime(getStartTime());
		educationImpl.setStopTime(getStopTime());
		educationImpl.setCreateUserId(getCreateUserId());
		educationImpl.setCreateDate(getCreateDate());
		educationImpl.setModifiedUserId(getModifiedUserId());
		educationImpl.setModifiedDate(getModifiedDate());

		educationImpl.resetOriginalValues();

		return educationImpl;
	}

	@Override
	public int compareTo(Education education) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(), education.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Education)) {
			return false;
		}

		Education education = (Education)obj;

		long primaryKey = education.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EducationModelImpl educationModelImpl = this;

		educationModelImpl._originalUserId = educationModelImpl._userId;

		educationModelImpl._setOriginalUserId = false;

		educationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Education> toCacheModel() {
		EducationCacheModel educationCacheModel = new EducationCacheModel();

		educationCacheModel.id = getId();

		educationCacheModel.userId = getUserId();

		educationCacheModel.witness = getWitness();

		String witness = educationCacheModel.witness;

		if ((witness != null) && (witness.length() == 0)) {
			educationCacheModel.witness = null;
		}

		educationCacheModel.professional = getProfessional();

		String professional = educationCacheModel.professional;

		if ((professional != null) && (professional.length() == 0)) {
			educationCacheModel.professional = null;
		}

		educationCacheModel.university = getUniversity();

		String university = educationCacheModel.university;

		if ((university != null) && (university.length() == 0)) {
			educationCacheModel.university = null;
		}

		educationCacheModel.contactPhone = getContactPhone();

		String contactPhone = educationCacheModel.contactPhone;

		if ((contactPhone != null) && (contactPhone.length() == 0)) {
			educationCacheModel.contactPhone = null;
		}

		Date startTime = getStartTime();

		if (startTime != null) {
			educationCacheModel.startTime = startTime.getTime();
		}
		else {
			educationCacheModel.startTime = Long.MIN_VALUE;
		}

		Date stopTime = getStopTime();

		if (stopTime != null) {
			educationCacheModel.stopTime = stopTime.getTime();
		}
		else {
			educationCacheModel.stopTime = Long.MIN_VALUE;
		}

		educationCacheModel.createUserId = getCreateUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			educationCacheModel.createDate = createDate.getTime();
		}
		else {
			educationCacheModel.createDate = Long.MIN_VALUE;
		}

		educationCacheModel.modifiedUserId = getModifiedUserId();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			educationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			educationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return educationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", witness=");
		sb.append(getWitness());
		sb.append(", professional=");
		sb.append(getProfessional());
		sb.append(", university=");
		sb.append(getUniversity());
		sb.append(", contactPhone=");
		sb.append(getContactPhone());
		sb.append(", startTime=");
		sb.append(getStartTime());
		sb.append(", stopTime=");
		sb.append(getStopTime());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.shuntian.portlet.intranet.model.Education");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>witness</column-name><column-value><![CDATA[");
		sb.append(getWitness());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>professional</column-name><column-value><![CDATA[");
		sb.append(getProfessional());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>university</column-name><column-value><![CDATA[");
		sb.append(getUniversity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactPhone</column-name><column-value><![CDATA[");
		sb.append(getContactPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startTime</column-name><column-value><![CDATA[");
		sb.append(getStartTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>stopTime</column-name><column-value><![CDATA[");
		sb.append(getStopTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Education.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Education.class
		};
	private long _id;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _witness;
	private String _professional;
	private String _university;
	private String _contactPhone;
	private Date _startTime;
	private Date _stopTime;
	private long _createUserId;
	private String _createUserUuid;
	private Date _createDate;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private Date _modifiedDate;
	private long _columnBitmask;
	private Education _escapedModel;
}