/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.shuntian.portlet.intranet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.shuntian.portlet.intranet.model.ExtInformation;
import com.shuntian.portlet.intranet.model.ExtInformationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ExtInformation service. Represents a row in the &quot;Intranet_ExtInformation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.shuntian.portlet.intranet.model.ExtInformationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ExtInformationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ExtInformationImpl
 * @see com.shuntian.portlet.intranet.model.ExtInformation
 * @see com.shuntian.portlet.intranet.model.ExtInformationModel
 * @generated
 */
public class ExtInformationModelImpl extends BaseModelImpl<ExtInformation>
	implements ExtInformationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ext information model instance should use the {@link com.shuntian.portlet.intranet.model.ExtInformation} interface instead.
	 */
	public static final String TABLE_NAME = "Intranet_ExtInformation";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "openCity", Types.VARCHAR },
			{ "bankName", Types.VARCHAR },
			{ "bankId", Types.VARCHAR },
			{ "laborContractStart", Types.TIMESTAMP },
			{ "laborContractEnd", Types.TIMESTAMP },
			{ "probationPeriodStart", Types.TIMESTAMP },
			{ "probationPeriodEnd", Types.TIMESTAMP },
			{ "induredLocation", Types.VARCHAR },
			{ "fristInsured", Types.TIMESTAMP },
			{ "isInsured", Types.VARCHAR },
			{ "createUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedUserId", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Intranet_ExtInformation (id_ LONG not null primary key,userId LONG,openCity VARCHAR(75) null,bankName VARCHAR(75) null,bankId VARCHAR(75) null,laborContractStart DATE null,laborContractEnd DATE null,probationPeriodStart DATE null,probationPeriodEnd DATE null,induredLocation VARCHAR(75) null,fristInsured DATE null,isInsured VARCHAR(75) null,createUserId LONG,createDate DATE null,modifiedUserId LONG,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Intranet_ExtInformation";
	public static final String ORDER_BY_JPQL = " ORDER BY extInformation.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY Intranet_ExtInformation.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.shuntian.portlet.intranet.model.ExtInformation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.shuntian.portlet.intranet.model.ExtInformation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.shuntian.portlet.intranet.model.ExtInformation"));

	public ExtInformationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ExtInformation.class;
	}

	@Override
	public String getModelClassName() {
		return ExtInformation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("userId", getUserId());
		attributes.put("openCity", getOpenCity());
		attributes.put("bankName", getBankName());
		attributes.put("bankId", getBankId());
		attributes.put("laborContractStart", getLaborContractStart());
		attributes.put("laborContractEnd", getLaborContractEnd());
		attributes.put("probationPeriodStart", getProbationPeriodStart());
		attributes.put("probationPeriodEnd", getProbationPeriodEnd());
		attributes.put("induredLocation", getInduredLocation());
		attributes.put("fristInsured", getFristInsured());
		attributes.put("isInsured", getIsInsured());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String openCity = (String)attributes.get("openCity");

		if (openCity != null) {
			setOpenCity(openCity);
		}

		String bankName = (String)attributes.get("bankName");

		if (bankName != null) {
			setBankName(bankName);
		}

		String bankId = (String)attributes.get("bankId");

		if (bankId != null) {
			setBankId(bankId);
		}

		Date laborContractStart = (Date)attributes.get("laborContractStart");

		if (laborContractStart != null) {
			setLaborContractStart(laborContractStart);
		}

		Date laborContractEnd = (Date)attributes.get("laborContractEnd");

		if (laborContractEnd != null) {
			setLaborContractEnd(laborContractEnd);
		}

		Date probationPeriodStart = (Date)attributes.get("probationPeriodStart");

		if (probationPeriodStart != null) {
			setProbationPeriodStart(probationPeriodStart);
		}

		Date probationPeriodEnd = (Date)attributes.get("probationPeriodEnd");

		if (probationPeriodEnd != null) {
			setProbationPeriodEnd(probationPeriodEnd);
		}

		String induredLocation = (String)attributes.get("induredLocation");

		if (induredLocation != null) {
			setInduredLocation(induredLocation);
		}

		Date fristInsured = (Date)attributes.get("fristInsured");

		if (fristInsured != null) {
			setFristInsured(fristInsured);
		}

		String isInsured = (String)attributes.get("isInsured");

		if (isInsured != null) {
			setIsInsured(isInsured);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getOpenCity() {
		if (_openCity == null) {
			return StringPool.BLANK;
		}
		else {
			return _openCity;
		}
	}

	@Override
	public void setOpenCity(String openCity) {
		_openCity = openCity;
	}

	@Override
	public String getBankName() {
		if (_bankName == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankName;
		}
	}

	@Override
	public void setBankName(String bankName) {
		_bankName = bankName;
	}

	@Override
	public String getBankId() {
		if (_bankId == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankId;
		}
	}

	@Override
	public void setBankId(String bankId) {
		_bankId = bankId;
	}

	@Override
	public Date getLaborContractStart() {
		return _laborContractStart;
	}

	@Override
	public void setLaborContractStart(Date laborContractStart) {
		_laborContractStart = laborContractStart;
	}

	@Override
	public Date getLaborContractEnd() {
		return _laborContractEnd;
	}

	@Override
	public void setLaborContractEnd(Date laborContractEnd) {
		_laborContractEnd = laborContractEnd;
	}

	@Override
	public Date getProbationPeriodStart() {
		return _probationPeriodStart;
	}

	@Override
	public void setProbationPeriodStart(Date probationPeriodStart) {
		_probationPeriodStart = probationPeriodStart;
	}

	@Override
	public Date getProbationPeriodEnd() {
		return _probationPeriodEnd;
	}

	@Override
	public void setProbationPeriodEnd(Date probationPeriodEnd) {
		_probationPeriodEnd = probationPeriodEnd;
	}

	@Override
	public String getInduredLocation() {
		if (_induredLocation == null) {
			return StringPool.BLANK;
		}
		else {
			return _induredLocation;
		}
	}

	@Override
	public void setInduredLocation(String induredLocation) {
		_induredLocation = induredLocation;
	}

	@Override
	public Date getFristInsured() {
		return _fristInsured;
	}

	@Override
	public void setFristInsured(Date fristInsured) {
		_fristInsured = fristInsured;
	}

	@Override
	public String getIsInsured() {
		if (_isInsured == null) {
			return StringPool.BLANK;
		}
		else {
			return _isInsured;
		}
	}

	@Override
	public void setIsInsured(String isInsured) {
		_isInsured = isInsured;
	}

	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	@Override
	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	@Override
	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	@Override
	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			ExtInformation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ExtInformation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ExtInformation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ExtInformationImpl extInformationImpl = new ExtInformationImpl();

		extInformationImpl.setId(getId());
		extInformationImpl.setUserId(getUserId());
		extInformationImpl.setOpenCity(getOpenCity());
		extInformationImpl.setBankName(getBankName());
		extInformationImpl.setBankId(getBankId());
		extInformationImpl.setLaborContractStart(getLaborContractStart());
		extInformationImpl.setLaborContractEnd(getLaborContractEnd());
		extInformationImpl.setProbationPeriodStart(getProbationPeriodStart());
		extInformationImpl.setProbationPeriodEnd(getProbationPeriodEnd());
		extInformationImpl.setInduredLocation(getInduredLocation());
		extInformationImpl.setFristInsured(getFristInsured());
		extInformationImpl.setIsInsured(getIsInsured());
		extInformationImpl.setCreateUserId(getCreateUserId());
		extInformationImpl.setCreateDate(getCreateDate());
		extInformationImpl.setModifiedUserId(getModifiedUserId());
		extInformationImpl.setModifiedDate(getModifiedDate());

		extInformationImpl.resetOriginalValues();

		return extInformationImpl;
	}

	@Override
	public int compareTo(ExtInformation extInformation) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				extInformation.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ExtInformation)) {
			return false;
		}

		ExtInformation extInformation = (ExtInformation)obj;

		long primaryKey = extInformation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ExtInformation> toCacheModel() {
		ExtInformationCacheModel extInformationCacheModel = new ExtInformationCacheModel();

		extInformationCacheModel.id = getId();

		extInformationCacheModel.userId = getUserId();

		extInformationCacheModel.openCity = getOpenCity();

		String openCity = extInformationCacheModel.openCity;

		if ((openCity != null) && (openCity.length() == 0)) {
			extInformationCacheModel.openCity = null;
		}

		extInformationCacheModel.bankName = getBankName();

		String bankName = extInformationCacheModel.bankName;

		if ((bankName != null) && (bankName.length() == 0)) {
			extInformationCacheModel.bankName = null;
		}

		extInformationCacheModel.bankId = getBankId();

		String bankId = extInformationCacheModel.bankId;

		if ((bankId != null) && (bankId.length() == 0)) {
			extInformationCacheModel.bankId = null;
		}

		Date laborContractStart = getLaborContractStart();

		if (laborContractStart != null) {
			extInformationCacheModel.laborContractStart = laborContractStart.getTime();
		}
		else {
			extInformationCacheModel.laborContractStart = Long.MIN_VALUE;
		}

		Date laborContractEnd = getLaborContractEnd();

		if (laborContractEnd != null) {
			extInformationCacheModel.laborContractEnd = laborContractEnd.getTime();
		}
		else {
			extInformationCacheModel.laborContractEnd = Long.MIN_VALUE;
		}

		Date probationPeriodStart = getProbationPeriodStart();

		if (probationPeriodStart != null) {
			extInformationCacheModel.probationPeriodStart = probationPeriodStart.getTime();
		}
		else {
			extInformationCacheModel.probationPeriodStart = Long.MIN_VALUE;
		}

		Date probationPeriodEnd = getProbationPeriodEnd();

		if (probationPeriodEnd != null) {
			extInformationCacheModel.probationPeriodEnd = probationPeriodEnd.getTime();
		}
		else {
			extInformationCacheModel.probationPeriodEnd = Long.MIN_VALUE;
		}

		extInformationCacheModel.induredLocation = getInduredLocation();

		String induredLocation = extInformationCacheModel.induredLocation;

		if ((induredLocation != null) && (induredLocation.length() == 0)) {
			extInformationCacheModel.induredLocation = null;
		}

		Date fristInsured = getFristInsured();

		if (fristInsured != null) {
			extInformationCacheModel.fristInsured = fristInsured.getTime();
		}
		else {
			extInformationCacheModel.fristInsured = Long.MIN_VALUE;
		}

		extInformationCacheModel.isInsured = getIsInsured();

		String isInsured = extInformationCacheModel.isInsured;

		if ((isInsured != null) && (isInsured.length() == 0)) {
			extInformationCacheModel.isInsured = null;
		}

		extInformationCacheModel.createUserId = getCreateUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			extInformationCacheModel.createDate = createDate.getTime();
		}
		else {
			extInformationCacheModel.createDate = Long.MIN_VALUE;
		}

		extInformationCacheModel.modifiedUserId = getModifiedUserId();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			extInformationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			extInformationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return extInformationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", openCity=");
		sb.append(getOpenCity());
		sb.append(", bankName=");
		sb.append(getBankName());
		sb.append(", bankId=");
		sb.append(getBankId());
		sb.append(", laborContractStart=");
		sb.append(getLaborContractStart());
		sb.append(", laborContractEnd=");
		sb.append(getLaborContractEnd());
		sb.append(", probationPeriodStart=");
		sb.append(getProbationPeriodStart());
		sb.append(", probationPeriodEnd=");
		sb.append(getProbationPeriodEnd());
		sb.append(", induredLocation=");
		sb.append(getInduredLocation());
		sb.append(", fristInsured=");
		sb.append(getFristInsured());
		sb.append(", isInsured=");
		sb.append(getIsInsured());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.shuntian.portlet.intranet.model.ExtInformation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>openCity</column-name><column-value><![CDATA[");
		sb.append(getOpenCity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankName</column-name><column-value><![CDATA[");
		sb.append(getBankName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankId</column-name><column-value><![CDATA[");
		sb.append(getBankId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>laborContractStart</column-name><column-value><![CDATA[");
		sb.append(getLaborContractStart());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>laborContractEnd</column-name><column-value><![CDATA[");
		sb.append(getLaborContractEnd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>probationPeriodStart</column-name><column-value><![CDATA[");
		sb.append(getProbationPeriodStart());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>probationPeriodEnd</column-name><column-value><![CDATA[");
		sb.append(getProbationPeriodEnd());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>induredLocation</column-name><column-value><![CDATA[");
		sb.append(getInduredLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fristInsured</column-name><column-value><![CDATA[");
		sb.append(getFristInsured());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isInsured</column-name><column-value><![CDATA[");
		sb.append(getIsInsured());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = ExtInformation.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			ExtInformation.class
		};
	private long _id;
	private long _userId;
	private String _userUuid;
	private String _openCity;
	private String _bankName;
	private String _bankId;
	private Date _laborContractStart;
	private Date _laborContractEnd;
	private Date _probationPeriodStart;
	private Date _probationPeriodEnd;
	private String _induredLocation;
	private Date _fristInsured;
	private String _isInsured;
	private long _createUserId;
	private String _createUserUuid;
	private Date _createDate;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private Date _modifiedDate;
	private ExtInformation _escapedModel;
}