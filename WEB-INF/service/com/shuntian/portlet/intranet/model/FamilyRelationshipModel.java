/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.shuntian.portlet.intranet.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the FamilyRelationship service. Represents a row in the &quot;Intranet_FamilyRelationship&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.shuntian.portlet.intranet.model.impl.FamilyRelationshipModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.shuntian.portlet.intranet.model.impl.FamilyRelationshipImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FamilyRelationship
 * @see com.shuntian.portlet.intranet.model.impl.FamilyRelationshipImpl
 * @see com.shuntian.portlet.intranet.model.impl.FamilyRelationshipModelImpl
 * @generated
 */
public interface FamilyRelationshipModel extends BaseModel<FamilyRelationship> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a family relationship model instance should use the {@link FamilyRelationship} interface instead.
	 */

	/**
	 * Returns the primary key of this family relationship.
	 *
	 * @return the primary key of this family relationship
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this family relationship.
	 *
	 * @param primaryKey the primary key of this family relationship
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this family relationship.
	 *
	 * @return the ID of this family relationship
	 */
	public long getId();

	/**
	 * Sets the ID of this family relationship.
	 *
	 * @param id the ID of this family relationship
	 */
	public void setId(long id);

	/**
	 * Returns the user ID of this family relationship.
	 *
	 * @return the user ID of this family relationship
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this family relationship.
	 *
	 * @param userId the user ID of this family relationship
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this family relationship.
	 *
	 * @return the user uuid of this family relationship
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this family relationship.
	 *
	 * @param userUuid the user uuid of this family relationship
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the fr name of this family relationship.
	 *
	 * @return the fr name of this family relationship
	 */
	@AutoEscape
	public String getFrName();

	/**
	 * Sets the fr name of this family relationship.
	 *
	 * @param frName the fr name of this family relationship
	 */
	public void setFrName(String frName);

	/**
	 * Returns the fr relationship of this family relationship.
	 *
	 * @return the fr relationship of this family relationship
	 */
	@AutoEscape
	public String getFrRelationship();

	/**
	 * Sets the fr relationship of this family relationship.
	 *
	 * @param frRelationship the fr relationship of this family relationship
	 */
	public void setFrRelationship(String frRelationship);

	/**
	 * Returns the fr work unit of this family relationship.
	 *
	 * @return the fr work unit of this family relationship
	 */
	@AutoEscape
	public String getFrWorkUnit();

	/**
	 * Sets the fr work unit of this family relationship.
	 *
	 * @param frWorkUnit the fr work unit of this family relationship
	 */
	public void setFrWorkUnit(String frWorkUnit);

	/**
	 * Returns the fr contact phone of this family relationship.
	 *
	 * @return the fr contact phone of this family relationship
	 */
	@AutoEscape
	public String getFrContactPhone();

	/**
	 * Sets the fr contact phone of this family relationship.
	 *
	 * @param frContactPhone the fr contact phone of this family relationship
	 */
	public void setFrContactPhone(String frContactPhone);

	/**
	 * Returns the fr once job of this family relationship.
	 *
	 * @return the fr once job of this family relationship
	 */
	@AutoEscape
	public String getFrOnceJob();

	/**
	 * Sets the fr once job of this family relationship.
	 *
	 * @param frOnceJob the fr once job of this family relationship
	 */
	public void setFrOnceJob(String frOnceJob);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(FamilyRelationship familyRelationship);

	@Override
	public int hashCode();

	@Override
	public CacheModel<FamilyRelationship> toCacheModel();

	@Override
	public FamilyRelationship toEscapedModel();

	@Override
	public FamilyRelationship toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}