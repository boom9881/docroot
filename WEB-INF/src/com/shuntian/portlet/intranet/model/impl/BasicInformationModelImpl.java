/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.shuntian.portlet.intranet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.shuntian.portlet.intranet.model.BasicInformation;
import com.shuntian.portlet.intranet.model.BasicInformationModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BasicInformation service. Represents a row in the &quot;Intranet_BasicInformation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.shuntian.portlet.intranet.model.BasicInformationModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BasicInformationImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see BasicInformationImpl
 * @see com.shuntian.portlet.intranet.model.BasicInformation
 * @see com.shuntian.portlet.intranet.model.BasicInformationModel
 * @generated
 */
public class BasicInformationModelImpl extends BaseModelImpl<BasicInformation>
	implements BasicInformationModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a basic information model instance should use the {@link com.shuntian.portlet.intranet.model.BasicInformation} interface instead.
	 */
	public static final String TABLE_NAME = "Intranet_BasicInformation";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "name", Types.VARCHAR },
			{ "sex", Types.INTEGER },
			{ "idNumber", Types.VARCHAR },
			{ "nation", Types.VARCHAR },
			{ "placeOfOrigin", Types.VARCHAR },
			{ "accountProperties", Types.VARCHAR },
			{ "birthDate", Types.TIMESTAMP },
			{ "maritalStatus", Types.VARCHAR },
			{ "highestDegree", Types.VARCHAR },
			{ "politicalBackground", Types.VARCHAR },
			{ "fileLocation", Types.VARCHAR },
			{ "basePay", Types.DOUBLE },
			{ "performancePay", Types.DOUBLE },
			{ "health", Types.INTEGER },
			{ "contactPhone", Types.VARCHAR },
			{ "mail", Types.VARCHAR },
			{ "domicile", Types.VARCHAR },
			{ "residencePhone", Types.VARCHAR },
			{ "currentResidentialAddress", Types.VARCHAR },
			{ "currentResidentialAddressPhone", Types.VARCHAR },
			{ "emergencyContact", Types.VARCHAR },
			{ "emergencyContactRelation", Types.VARCHAR },
			{ "emergencyContactPhone", Types.VARCHAR },
			{ "createUserId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedUserId", Types.BIGINT },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table Intranet_BasicInformation (id_ LONG not null primary key,userId LONG,name VARCHAR(75) null,sex INTEGER,idNumber VARCHAR(75) null,nation VARCHAR(75) null,placeOfOrigin VARCHAR(75) null,accountProperties VARCHAR(75) null,birthDate DATE null,maritalStatus VARCHAR(75) null,highestDegree VARCHAR(75) null,politicalBackground VARCHAR(75) null,fileLocation VARCHAR(75) null,basePay DOUBLE,performancePay DOUBLE,health INTEGER,contactPhone VARCHAR(75) null,mail VARCHAR(75) null,domicile VARCHAR(75) null,residencePhone VARCHAR(75) null,currentResidentialAddress VARCHAR(75) null,currentResidentialAddressPhone VARCHAR(75) null,emergencyContact VARCHAR(75) null,emergencyContactRelation VARCHAR(75) null,emergencyContactPhone VARCHAR(75) null,createUserId LONG,createDate DATE null,modifiedUserId LONG,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table Intranet_BasicInformation";
	public static final String ORDER_BY_JPQL = " ORDER BY basicInformation.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY Intranet_BasicInformation.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.shuntian.portlet.intranet.model.BasicInformation"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.shuntian.portlet.intranet.model.BasicInformation"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.shuntian.portlet.intranet.model.BasicInformation"),
			true);
	public static long USERID_COLUMN_BITMASK = 1L;
	public static long CREATEDATE_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.shuntian.portlet.intranet.model.BasicInformation"));

	public BasicInformationModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BasicInformation.class;
	}

	@Override
	public String getModelClassName() {
		return BasicInformation.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("userId", getUserId());
		attributes.put("name", getName());
		attributes.put("sex", getSex());
		attributes.put("idNumber", getIdNumber());
		attributes.put("nation", getNation());
		attributes.put("placeOfOrigin", getPlaceOfOrigin());
		attributes.put("accountProperties", getAccountProperties());
		attributes.put("birthDate", getBirthDate());
		attributes.put("maritalStatus", getMaritalStatus());
		attributes.put("highestDegree", getHighestDegree());
		attributes.put("politicalBackground", getPoliticalBackground());
		attributes.put("fileLocation", getFileLocation());
		attributes.put("basePay", getBasePay());
		attributes.put("performancePay", getPerformancePay());
		attributes.put("health", getHealth());
		attributes.put("contactPhone", getContactPhone());
		attributes.put("mail", getMail());
		attributes.put("domicile", getDomicile());
		attributes.put("residencePhone", getResidencePhone());
		attributes.put("currentResidentialAddress",
			getCurrentResidentialAddress());
		attributes.put("currentResidentialAddressPhone",
			getCurrentResidentialAddressPhone());
		attributes.put("emergencyContact", getEmergencyContact());
		attributes.put("emergencyContactRelation", getEmergencyContactRelation());
		attributes.put("emergencyContactPhone", getEmergencyContactPhone());
		attributes.put("createUserId", getCreateUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedUserId", getModifiedUserId());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Integer sex = (Integer)attributes.get("sex");

		if (sex != null) {
			setSex(sex);
		}

		String idNumber = (String)attributes.get("idNumber");

		if (idNumber != null) {
			setIdNumber(idNumber);
		}

		String nation = (String)attributes.get("nation");

		if (nation != null) {
			setNation(nation);
		}

		String placeOfOrigin = (String)attributes.get("placeOfOrigin");

		if (placeOfOrigin != null) {
			setPlaceOfOrigin(placeOfOrigin);
		}

		String accountProperties = (String)attributes.get("accountProperties");

		if (accountProperties != null) {
			setAccountProperties(accountProperties);
		}

		Date birthDate = (Date)attributes.get("birthDate");

		if (birthDate != null) {
			setBirthDate(birthDate);
		}

		String maritalStatus = (String)attributes.get("maritalStatus");

		if (maritalStatus != null) {
			setMaritalStatus(maritalStatus);
		}

		String highestDegree = (String)attributes.get("highestDegree");

		if (highestDegree != null) {
			setHighestDegree(highestDegree);
		}

		String politicalBackground = (String)attributes.get(
				"politicalBackground");

		if (politicalBackground != null) {
			setPoliticalBackground(politicalBackground);
		}

		String fileLocation = (String)attributes.get("fileLocation");

		if (fileLocation != null) {
			setFileLocation(fileLocation);
		}

		Double basePay = (Double)attributes.get("basePay");

		if (basePay != null) {
			setBasePay(basePay);
		}

		Double performancePay = (Double)attributes.get("performancePay");

		if (performancePay != null) {
			setPerformancePay(performancePay);
		}

		Integer health = (Integer)attributes.get("health");

		if (health != null) {
			setHealth(health);
		}

		String contactPhone = (String)attributes.get("contactPhone");

		if (contactPhone != null) {
			setContactPhone(contactPhone);
		}

		String mail = (String)attributes.get("mail");

		if (mail != null) {
			setMail(mail);
		}

		String domicile = (String)attributes.get("domicile");

		if (domicile != null) {
			setDomicile(domicile);
		}

		String residencePhone = (String)attributes.get("residencePhone");

		if (residencePhone != null) {
			setResidencePhone(residencePhone);
		}

		String currentResidentialAddress = (String)attributes.get(
				"currentResidentialAddress");

		if (currentResidentialAddress != null) {
			setCurrentResidentialAddress(currentResidentialAddress);
		}

		String currentResidentialAddressPhone = (String)attributes.get(
				"currentResidentialAddressPhone");

		if (currentResidentialAddressPhone != null) {
			setCurrentResidentialAddressPhone(currentResidentialAddressPhone);
		}

		String emergencyContact = (String)attributes.get("emergencyContact");

		if (emergencyContact != null) {
			setEmergencyContact(emergencyContact);
		}

		String emergencyContactRelation = (String)attributes.get(
				"emergencyContactRelation");

		if (emergencyContactRelation != null) {
			setEmergencyContactRelation(emergencyContactRelation);
		}

		String emergencyContactPhone = (String)attributes.get(
				"emergencyContactPhone");

		if (emergencyContactPhone != null) {
			setEmergencyContactPhone(emergencyContactPhone);
		}

		Long createUserId = (Long)attributes.get("createUserId");

		if (createUserId != null) {
			setCreateUserId(createUserId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Long modifiedUserId = (Long)attributes.get("modifiedUserId");

		if (modifiedUserId != null) {
			setModifiedUserId(modifiedUserId);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_name = name;
	}

	@Override
	public int getSex() {
		return _sex;
	}

	@Override
	public void setSex(int sex) {
		_sex = sex;
	}

	@Override
	public String getIdNumber() {
		if (_idNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _idNumber;
		}
	}

	@Override
	public void setIdNumber(String idNumber) {
		_idNumber = idNumber;
	}

	@Override
	public String getNation() {
		if (_nation == null) {
			return StringPool.BLANK;
		}
		else {
			return _nation;
		}
	}

	@Override
	public void setNation(String nation) {
		_nation = nation;
	}

	@Override
	public String getPlaceOfOrigin() {
		if (_placeOfOrigin == null) {
			return StringPool.BLANK;
		}
		else {
			return _placeOfOrigin;
		}
	}

	@Override
	public void setPlaceOfOrigin(String placeOfOrigin) {
		_placeOfOrigin = placeOfOrigin;
	}

	@Override
	public String getAccountProperties() {
		if (_accountProperties == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountProperties;
		}
	}

	@Override
	public void setAccountProperties(String accountProperties) {
		_accountProperties = accountProperties;
	}

	@Override
	public Date getBirthDate() {
		return _birthDate;
	}

	@Override
	public void setBirthDate(Date birthDate) {
		_birthDate = birthDate;
	}

	@Override
	public String getMaritalStatus() {
		if (_maritalStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _maritalStatus;
		}
	}

	@Override
	public void setMaritalStatus(String maritalStatus) {
		_maritalStatus = maritalStatus;
	}

	@Override
	public String getHighestDegree() {
		if (_highestDegree == null) {
			return StringPool.BLANK;
		}
		else {
			return _highestDegree;
		}
	}

	@Override
	public void setHighestDegree(String highestDegree) {
		_highestDegree = highestDegree;
	}

	@Override
	public String getPoliticalBackground() {
		if (_politicalBackground == null) {
			return StringPool.BLANK;
		}
		else {
			return _politicalBackground;
		}
	}

	@Override
	public void setPoliticalBackground(String politicalBackground) {
		_politicalBackground = politicalBackground;
	}

	@Override
	public String getFileLocation() {
		if (_fileLocation == null) {
			return StringPool.BLANK;
		}
		else {
			return _fileLocation;
		}
	}

	@Override
	public void setFileLocation(String fileLocation) {
		_fileLocation = fileLocation;
	}

	@Override
	public double getBasePay() {
		return _basePay;
	}

	@Override
	public void setBasePay(double basePay) {
		_basePay = basePay;
	}

	@Override
	public double getPerformancePay() {
		return _performancePay;
	}

	@Override
	public void setPerformancePay(double performancePay) {
		_performancePay = performancePay;
	}

	@Override
	public int getHealth() {
		return _health;
	}

	@Override
	public void setHealth(int health) {
		_health = health;
	}

	@Override
	public String getContactPhone() {
		if (_contactPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactPhone;
		}
	}

	@Override
	public void setContactPhone(String contactPhone) {
		_contactPhone = contactPhone;
	}

	@Override
	public String getMail() {
		if (_mail == null) {
			return StringPool.BLANK;
		}
		else {
			return _mail;
		}
	}

	@Override
	public void setMail(String mail) {
		_mail = mail;
	}

	@Override
	public String getDomicile() {
		if (_domicile == null) {
			return StringPool.BLANK;
		}
		else {
			return _domicile;
		}
	}

	@Override
	public void setDomicile(String domicile) {
		_domicile = domicile;
	}

	@Override
	public String getResidencePhone() {
		if (_residencePhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _residencePhone;
		}
	}

	@Override
	public void setResidencePhone(String residencePhone) {
		_residencePhone = residencePhone;
	}

	@Override
	public String getCurrentResidentialAddress() {
		if (_currentResidentialAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _currentResidentialAddress;
		}
	}

	@Override
	public void setCurrentResidentialAddress(String currentResidentialAddress) {
		_currentResidentialAddress = currentResidentialAddress;
	}

	@Override
	public String getCurrentResidentialAddressPhone() {
		if (_currentResidentialAddressPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _currentResidentialAddressPhone;
		}
	}

	@Override
	public void setCurrentResidentialAddressPhone(
		String currentResidentialAddressPhone) {
		_currentResidentialAddressPhone = currentResidentialAddressPhone;
	}

	@Override
	public String getEmergencyContact() {
		if (_emergencyContact == null) {
			return StringPool.BLANK;
		}
		else {
			return _emergencyContact;
		}
	}

	@Override
	public void setEmergencyContact(String emergencyContact) {
		_emergencyContact = emergencyContact;
	}

	@Override
	public String getEmergencyContactRelation() {
		if (_emergencyContactRelation == null) {
			return StringPool.BLANK;
		}
		else {
			return _emergencyContactRelation;
		}
	}

	@Override
	public void setEmergencyContactRelation(String emergencyContactRelation) {
		_emergencyContactRelation = emergencyContactRelation;
	}

	@Override
	public String getEmergencyContactPhone() {
		if (_emergencyContactPhone == null) {
			return StringPool.BLANK;
		}
		else {
			return _emergencyContactPhone;
		}
	}

	@Override
	public void setEmergencyContactPhone(String emergencyContactPhone) {
		_emergencyContactPhone = emergencyContactPhone;
	}

	@Override
	public long getCreateUserId() {
		return _createUserId;
	}

	@Override
	public void setCreateUserId(long createUserId) {
		_createUserId = createUserId;
	}

	@Override
	public String getCreateUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getCreateUserId(), "uuid",
			_createUserUuid);
	}

	@Override
	public void setCreateUserUuid(String createUserUuid) {
		_createUserUuid = createUserUuid;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public long getModifiedUserId() {
		return _modifiedUserId;
	}

	@Override
	public void setModifiedUserId(long modifiedUserId) {
		_modifiedUserId = modifiedUserId;
	}

	@Override
	public String getModifiedUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getModifiedUserId(), "uuid",
			_modifiedUserUuid);
	}

	@Override
	public void setModifiedUserUuid(String modifiedUserUuid) {
		_modifiedUserUuid = modifiedUserUuid;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BasicInformation.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BasicInformation toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BasicInformation)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BasicInformationImpl basicInformationImpl = new BasicInformationImpl();

		basicInformationImpl.setId(getId());
		basicInformationImpl.setUserId(getUserId());
		basicInformationImpl.setName(getName());
		basicInformationImpl.setSex(getSex());
		basicInformationImpl.setIdNumber(getIdNumber());
		basicInformationImpl.setNation(getNation());
		basicInformationImpl.setPlaceOfOrigin(getPlaceOfOrigin());
		basicInformationImpl.setAccountProperties(getAccountProperties());
		basicInformationImpl.setBirthDate(getBirthDate());
		basicInformationImpl.setMaritalStatus(getMaritalStatus());
		basicInformationImpl.setHighestDegree(getHighestDegree());
		basicInformationImpl.setPoliticalBackground(getPoliticalBackground());
		basicInformationImpl.setFileLocation(getFileLocation());
		basicInformationImpl.setBasePay(getBasePay());
		basicInformationImpl.setPerformancePay(getPerformancePay());
		basicInformationImpl.setHealth(getHealth());
		basicInformationImpl.setContactPhone(getContactPhone());
		basicInformationImpl.setMail(getMail());
		basicInformationImpl.setDomicile(getDomicile());
		basicInformationImpl.setResidencePhone(getResidencePhone());
		basicInformationImpl.setCurrentResidentialAddress(getCurrentResidentialAddress());
		basicInformationImpl.setCurrentResidentialAddressPhone(getCurrentResidentialAddressPhone());
		basicInformationImpl.setEmergencyContact(getEmergencyContact());
		basicInformationImpl.setEmergencyContactRelation(getEmergencyContactRelation());
		basicInformationImpl.setEmergencyContactPhone(getEmergencyContactPhone());
		basicInformationImpl.setCreateUserId(getCreateUserId());
		basicInformationImpl.setCreateDate(getCreateDate());
		basicInformationImpl.setModifiedUserId(getModifiedUserId());
		basicInformationImpl.setModifiedDate(getModifiedDate());

		basicInformationImpl.resetOriginalValues();

		return basicInformationImpl;
	}

	@Override
	public int compareTo(BasicInformation basicInformation) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				basicInformation.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BasicInformation)) {
			return false;
		}

		BasicInformation basicInformation = (BasicInformation)obj;

		long primaryKey = basicInformation.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BasicInformationModelImpl basicInformationModelImpl = this;

		basicInformationModelImpl._originalUserId = basicInformationModelImpl._userId;

		basicInformationModelImpl._setOriginalUserId = false;

		basicInformationModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BasicInformation> toCacheModel() {
		BasicInformationCacheModel basicInformationCacheModel = new BasicInformationCacheModel();

		basicInformationCacheModel.id = getId();

		basicInformationCacheModel.userId = getUserId();

		basicInformationCacheModel.name = getName();

		String name = basicInformationCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			basicInformationCacheModel.name = null;
		}

		basicInformationCacheModel.sex = getSex();

		basicInformationCacheModel.idNumber = getIdNumber();

		String idNumber = basicInformationCacheModel.idNumber;

		if ((idNumber != null) && (idNumber.length() == 0)) {
			basicInformationCacheModel.idNumber = null;
		}

		basicInformationCacheModel.nation = getNation();

		String nation = basicInformationCacheModel.nation;

		if ((nation != null) && (nation.length() == 0)) {
			basicInformationCacheModel.nation = null;
		}

		basicInformationCacheModel.placeOfOrigin = getPlaceOfOrigin();

		String placeOfOrigin = basicInformationCacheModel.placeOfOrigin;

		if ((placeOfOrigin != null) && (placeOfOrigin.length() == 0)) {
			basicInformationCacheModel.placeOfOrigin = null;
		}

		basicInformationCacheModel.accountProperties = getAccountProperties();

		String accountProperties = basicInformationCacheModel.accountProperties;

		if ((accountProperties != null) && (accountProperties.length() == 0)) {
			basicInformationCacheModel.accountProperties = null;
		}

		Date birthDate = getBirthDate();

		if (birthDate != null) {
			basicInformationCacheModel.birthDate = birthDate.getTime();
		}
		else {
			basicInformationCacheModel.birthDate = Long.MIN_VALUE;
		}

		basicInformationCacheModel.maritalStatus = getMaritalStatus();

		String maritalStatus = basicInformationCacheModel.maritalStatus;

		if ((maritalStatus != null) && (maritalStatus.length() == 0)) {
			basicInformationCacheModel.maritalStatus = null;
		}

		basicInformationCacheModel.highestDegree = getHighestDegree();

		String highestDegree = basicInformationCacheModel.highestDegree;

		if ((highestDegree != null) && (highestDegree.length() == 0)) {
			basicInformationCacheModel.highestDegree = null;
		}

		basicInformationCacheModel.politicalBackground = getPoliticalBackground();

		String politicalBackground = basicInformationCacheModel.politicalBackground;

		if ((politicalBackground != null) &&
				(politicalBackground.length() == 0)) {
			basicInformationCacheModel.politicalBackground = null;
		}

		basicInformationCacheModel.fileLocation = getFileLocation();

		String fileLocation = basicInformationCacheModel.fileLocation;

		if ((fileLocation != null) && (fileLocation.length() == 0)) {
			basicInformationCacheModel.fileLocation = null;
		}

		basicInformationCacheModel.basePay = getBasePay();

		basicInformationCacheModel.performancePay = getPerformancePay();

		basicInformationCacheModel.health = getHealth();

		basicInformationCacheModel.contactPhone = getContactPhone();

		String contactPhone = basicInformationCacheModel.contactPhone;

		if ((contactPhone != null) && (contactPhone.length() == 0)) {
			basicInformationCacheModel.contactPhone = null;
		}

		basicInformationCacheModel.mail = getMail();

		String mail = basicInformationCacheModel.mail;

		if ((mail != null) && (mail.length() == 0)) {
			basicInformationCacheModel.mail = null;
		}

		basicInformationCacheModel.domicile = getDomicile();

		String domicile = basicInformationCacheModel.domicile;

		if ((domicile != null) && (domicile.length() == 0)) {
			basicInformationCacheModel.domicile = null;
		}

		basicInformationCacheModel.residencePhone = getResidencePhone();

		String residencePhone = basicInformationCacheModel.residencePhone;

		if ((residencePhone != null) && (residencePhone.length() == 0)) {
			basicInformationCacheModel.residencePhone = null;
		}

		basicInformationCacheModel.currentResidentialAddress = getCurrentResidentialAddress();

		String currentResidentialAddress = basicInformationCacheModel.currentResidentialAddress;

		if ((currentResidentialAddress != null) &&
				(currentResidentialAddress.length() == 0)) {
			basicInformationCacheModel.currentResidentialAddress = null;
		}

		basicInformationCacheModel.currentResidentialAddressPhone = getCurrentResidentialAddressPhone();

		String currentResidentialAddressPhone = basicInformationCacheModel.currentResidentialAddressPhone;

		if ((currentResidentialAddressPhone != null) &&
				(currentResidentialAddressPhone.length() == 0)) {
			basicInformationCacheModel.currentResidentialAddressPhone = null;
		}

		basicInformationCacheModel.emergencyContact = getEmergencyContact();

		String emergencyContact = basicInformationCacheModel.emergencyContact;

		if ((emergencyContact != null) && (emergencyContact.length() == 0)) {
			basicInformationCacheModel.emergencyContact = null;
		}

		basicInformationCacheModel.emergencyContactRelation = getEmergencyContactRelation();

		String emergencyContactRelation = basicInformationCacheModel.emergencyContactRelation;

		if ((emergencyContactRelation != null) &&
				(emergencyContactRelation.length() == 0)) {
			basicInformationCacheModel.emergencyContactRelation = null;
		}

		basicInformationCacheModel.emergencyContactPhone = getEmergencyContactPhone();

		String emergencyContactPhone = basicInformationCacheModel.emergencyContactPhone;

		if ((emergencyContactPhone != null) &&
				(emergencyContactPhone.length() == 0)) {
			basicInformationCacheModel.emergencyContactPhone = null;
		}

		basicInformationCacheModel.createUserId = getCreateUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			basicInformationCacheModel.createDate = createDate.getTime();
		}
		else {
			basicInformationCacheModel.createDate = Long.MIN_VALUE;
		}

		basicInformationCacheModel.modifiedUserId = getModifiedUserId();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			basicInformationCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			basicInformationCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return basicInformationCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(59);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", sex=");
		sb.append(getSex());
		sb.append(", idNumber=");
		sb.append(getIdNumber());
		sb.append(", nation=");
		sb.append(getNation());
		sb.append(", placeOfOrigin=");
		sb.append(getPlaceOfOrigin());
		sb.append(", accountProperties=");
		sb.append(getAccountProperties());
		sb.append(", birthDate=");
		sb.append(getBirthDate());
		sb.append(", maritalStatus=");
		sb.append(getMaritalStatus());
		sb.append(", highestDegree=");
		sb.append(getHighestDegree());
		sb.append(", politicalBackground=");
		sb.append(getPoliticalBackground());
		sb.append(", fileLocation=");
		sb.append(getFileLocation());
		sb.append(", basePay=");
		sb.append(getBasePay());
		sb.append(", performancePay=");
		sb.append(getPerformancePay());
		sb.append(", health=");
		sb.append(getHealth());
		sb.append(", contactPhone=");
		sb.append(getContactPhone());
		sb.append(", mail=");
		sb.append(getMail());
		sb.append(", domicile=");
		sb.append(getDomicile());
		sb.append(", residencePhone=");
		sb.append(getResidencePhone());
		sb.append(", currentResidentialAddress=");
		sb.append(getCurrentResidentialAddress());
		sb.append(", currentResidentialAddressPhone=");
		sb.append(getCurrentResidentialAddressPhone());
		sb.append(", emergencyContact=");
		sb.append(getEmergencyContact());
		sb.append(", emergencyContactRelation=");
		sb.append(getEmergencyContactRelation());
		sb.append(", emergencyContactPhone=");
		sb.append(getEmergencyContactPhone());
		sb.append(", createUserId=");
		sb.append(getCreateUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedUserId=");
		sb.append(getModifiedUserId());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(91);

		sb.append("<model><model-name>");
		sb.append("com.shuntian.portlet.intranet.model.BasicInformation");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sex</column-name><column-value><![CDATA[");
		sb.append(getSex());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idNumber</column-name><column-value><![CDATA[");
		sb.append(getIdNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nation</column-name><column-value><![CDATA[");
		sb.append(getNation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>placeOfOrigin</column-name><column-value><![CDATA[");
		sb.append(getPlaceOfOrigin());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountProperties</column-name><column-value><![CDATA[");
		sb.append(getAccountProperties());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthDate</column-name><column-value><![CDATA[");
		sb.append(getBirthDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maritalStatus</column-name><column-value><![CDATA[");
		sb.append(getMaritalStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>highestDegree</column-name><column-value><![CDATA[");
		sb.append(getHighestDegree());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>politicalBackground</column-name><column-value><![CDATA[");
		sb.append(getPoliticalBackground());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileLocation</column-name><column-value><![CDATA[");
		sb.append(getFileLocation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>basePay</column-name><column-value><![CDATA[");
		sb.append(getBasePay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>performancePay</column-name><column-value><![CDATA[");
		sb.append(getPerformancePay());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>health</column-name><column-value><![CDATA[");
		sb.append(getHealth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactPhone</column-name><column-value><![CDATA[");
		sb.append(getContactPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mail</column-name><column-value><![CDATA[");
		sb.append(getMail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>domicile</column-name><column-value><![CDATA[");
		sb.append(getDomicile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>residencePhone</column-name><column-value><![CDATA[");
		sb.append(getResidencePhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currentResidentialAddress</column-name><column-value><![CDATA[");
		sb.append(getCurrentResidentialAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currentResidentialAddressPhone</column-name><column-value><![CDATA[");
		sb.append(getCurrentResidentialAddressPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emergencyContact</column-name><column-value><![CDATA[");
		sb.append(getEmergencyContact());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emergencyContactRelation</column-name><column-value><![CDATA[");
		sb.append(getEmergencyContactRelation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>emergencyContactPhone</column-name><column-value><![CDATA[");
		sb.append(getEmergencyContactPhone());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createUserId</column-name><column-value><![CDATA[");
		sb.append(getCreateUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedUserId</column-name><column-value><![CDATA[");
		sb.append(getModifiedUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BasicInformation.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			BasicInformation.class
		};
	private long _id;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _name;
	private int _sex;
	private String _idNumber;
	private String _nation;
	private String _placeOfOrigin;
	private String _accountProperties;
	private Date _birthDate;
	private String _maritalStatus;
	private String _highestDegree;
	private String _politicalBackground;
	private String _fileLocation;
	private double _basePay;
	private double _performancePay;
	private int _health;
	private String _contactPhone;
	private String _mail;
	private String _domicile;
	private String _residencePhone;
	private String _currentResidentialAddress;
	private String _currentResidentialAddressPhone;
	private String _emergencyContact;
	private String _emergencyContactRelation;
	private String _emergencyContactPhone;
	private long _createUserId;
	private String _createUserUuid;
	private Date _createDate;
	private long _modifiedUserId;
	private String _modifiedUserUuid;
	private Date _modifiedDate;
	private long _columnBitmask;
	private BasicInformation _escapedModel;
}