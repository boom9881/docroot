/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.shuntian.portlet.intranet.model;

import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Attendance service. Represents a row in the &quot;Intranet_Attendance&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.shuntian.portlet.intranet.model.impl.AttendanceModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.shuntian.portlet.intranet.model.impl.AttendanceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Attendance
 * @see com.shuntian.portlet.intranet.model.impl.AttendanceImpl
 * @see com.shuntian.portlet.intranet.model.impl.AttendanceModelImpl
 * @generated
 */
public interface AttendanceModel extends BaseModel<Attendance> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a attendance model instance should use the {@link Attendance} interface instead.
	 */

	/**
	 * Returns the primary key of this attendance.
	 *
	 * @return the primary key of this attendance
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this attendance.
	 *
	 * @param primaryKey the primary key of this attendance
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the ID of this attendance.
	 *
	 * @return the ID of this attendance
	 */
	public long getId();

	/**
	 * Sets the ID of this attendance.
	 *
	 * @param id the ID of this attendance
	 */
	public void setId(long id);

	/**
	 * Returns the user ID of this attendance.
	 *
	 * @return the user ID of this attendance
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this attendance.
	 *
	 * @param userId the user ID of this attendance
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this attendance.
	 *
	 * @return the user uuid of this attendance
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this attendance.
	 *
	 * @param userUuid the user uuid of this attendance
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the should attendance of this attendance.
	 *
	 * @return the should attendance of this attendance
	 */
	public double getShouldAttendance();

	/**
	 * Sets the should attendance of this attendance.
	 *
	 * @param shouldAttendance the should attendance of this attendance
	 */
	public void setShouldAttendance(double shouldAttendance);

	/**
	 * Returns the actual attendance of this attendance.
	 *
	 * @return the actual attendance of this attendance
	 */
	public double getActualAttendance();

	/**
	 * Sets the actual attendance of this attendance.
	 *
	 * @param actualAttendance the actual attendance of this attendance
	 */
	public void setActualAttendance(double actualAttendance);

	/**
	 * Returns the attendance year of this attendance.
	 *
	 * @return the attendance year of this attendance
	 */
	public long getAttendanceYear();

	/**
	 * Sets the attendance year of this attendance.
	 *
	 * @param attendanceYear the attendance year of this attendance
	 */
	public void setAttendanceYear(long attendanceYear);

	/**
	 * Returns the attendance monthly of this attendance.
	 *
	 * @return the attendance monthly of this attendance
	 */
	public long getAttendanceMonthly();

	/**
	 * Sets the attendance monthly of this attendance.
	 *
	 * @param attendanceMonthly the attendance monthly of this attendance
	 */
	public void setAttendanceMonthly(long attendanceMonthly);

	/**
	 * Returns the create user ID of this attendance.
	 *
	 * @return the create user ID of this attendance
	 */
	public long getCreateUserId();

	/**
	 * Sets the create user ID of this attendance.
	 *
	 * @param createUserId the create user ID of this attendance
	 */
	public void setCreateUserId(long createUserId);

	/**
	 * Returns the create user uuid of this attendance.
	 *
	 * @return the create user uuid of this attendance
	 * @throws SystemException if a system exception occurred
	 */
	public String getCreateUserUuid() throws SystemException;

	/**
	 * Sets the create user uuid of this attendance.
	 *
	 * @param createUserUuid the create user uuid of this attendance
	 */
	public void setCreateUserUuid(String createUserUuid);

	/**
	 * Returns the create date of this attendance.
	 *
	 * @return the create date of this attendance
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this attendance.
	 *
	 * @param createDate the create date of this attendance
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified user ID of this attendance.
	 *
	 * @return the modified user ID of this attendance
	 */
	public long getModifiedUserId();

	/**
	 * Sets the modified user ID of this attendance.
	 *
	 * @param modifiedUserId the modified user ID of this attendance
	 */
	public void setModifiedUserId(long modifiedUserId);

	/**
	 * Returns the modified user uuid of this attendance.
	 *
	 * @return the modified user uuid of this attendance
	 * @throws SystemException if a system exception occurred
	 */
	public String getModifiedUserUuid() throws SystemException;

	/**
	 * Sets the modified user uuid of this attendance.
	 *
	 * @param modifiedUserUuid the modified user uuid of this attendance
	 */
	public void setModifiedUserUuid(String modifiedUserUuid);

	/**
	 * Returns the modified date of this attendance.
	 *
	 * @return the modified date of this attendance
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this attendance.
	 *
	 * @param modifiedDate the modified date of this attendance
	 */
	public void setModifiedDate(Date modifiedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Attendance attendance);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Attendance> toCacheModel();

	@Override
	public Attendance toEscapedModel();

	@Override
	public Attendance toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}